<title>{{ type }}</title>

<div class="status-container">
  <div class="status">
    {{#ifeq type "success" }}
    <div class="status-icon success">
      <img src="/images/success.svg" class="status-image" alt="Success">
    </div>
    <h1 class="status-title">Payment Successful!</h1>
    <p class="status-message">
      Your order has been successfully placed and payment confirmed.
    </p>
    {{/ifeq}}
    
    {{#ifeq type "pending" }}
    <div class="status-icon pending">
      <img src="/images/pending.svg" class="status-image" alt="Pending">
      <div class="loading-spinner"></div>
    </div>
    <h1 class="status-title">Payment Pending</h1>
    <p class="status-message">
      Your order has been received!
    </p>
    <div class="status-details">
      <div class="detail-item">
        <span class="detail-label">Status:</span>
        <span class="detail-value pending-badge" id="current-status">Processing</span>
      </div>
      <div class="detail-item">
        <span class="detail-label">Order Reference:</span>
        <span class="detail-value">{{orderRef}}</span>
      </div>
    </div>
    {{#if redirectData}}
    <div class="status-check-section">
      <button class="button secondary" id="check-status-btn">Check updated status</button>
      <div id="status-check-result" class="status-check-result"></div>
    </div>
    {{/if}}
    <div class="developer-guidance">
      <h3>For Developers:</h3>
      <p>To check the payment status:</p>
      <ol>
        <li>Log into your <a href="https://ca-test.adyen.com" target="_blank" rel="noopener">Adyen Customer Area</a></li>
        <li>Navigate to <strong>Transactions</strong> → <strong>Payments</strong></li>
        <li>Search for Order Reference: <code>{{orderRef}}</code></li>
        <li>Check the payment status and result code</li>
      </ol>
      <p><strong>Note:</strong> In production, you would implement webhook handling to automatically update payment statuses in your database.</p>
    </div>
    {{#if redirectData}}
    <script>
      (function() {
        let redirectData;
        try {
          redirectData = JSON.parse(decodeURIComponent('{{{redirectData}}}'));
        } catch (e) {
          console.error('Failed to parse redirectData:', e);
          return;
        }
        
        const checkStatusBtn = document.getElementById('check-status-btn');
        const statusResult = document.getElementById('status-check-result');
        const currentStatus = document.getElementById('current-status');
        
        if (!checkStatusBtn) {
          console.error('Check status button not found');
          return;
        }
        
        checkStatusBtn.addEventListener('click', async function() {
          checkStatusBtn.disabled = true;
            checkStatusBtn.textContent = 'Checking…';
          statusResult.innerHTML = '';
          
          try {
            const response = await fetch('/api/recheck-payment-status', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                orderRef: '{{orderRef}}',
                redirectResult: redirectData.redirectResult,
                sessionId: redirectData.sessionId
              })
            });
            
            const data = await response.json();
            
            if (response.ok) {
              currentStatus.textContent = data.status;
              currentStatus.className = 'detail-value ' + data.status.toLowerCase() + '-badge';
              
              // Show appropriate message based on status
              if (data.status === 'Authorised') {
                statusResult.innerHTML = `
                  <div class="status-update success">
                    <strong>Status Updated:</strong> ${data.status}
                    <p>Payment completed successfully!</p>
                  </div>
                `;
              } else if (data.status === 'Refused') {
                statusResult.innerHTML = `
                  <div class="status-update error">
                    <strong>Status Updated:</strong> ${data.status}
                    <p>Payment was refused. Redirecting...</p>
                  </div>
                `;
              } else if (data.status === 'Cancelled') {
                statusResult.innerHTML = `
                  <div class="status-update error">
                    <strong>Status Updated:</strong> ${data.status}
                    <p>Payment was cancelled. Redirecting...</p>
                  </div>
                `;
              } else {
                statusResult.innerHTML = `
                  <div class="status-update success">
                    <strong>Status Updated:</strong> ${data.status}
                  </div>
                `;
              }
              
              // Redirect based on status
              if (data.status === 'Authorised') {
                setTimeout(() => {
                  window.location.href = '/result/success?orderRef={{orderRef}}';
                }, 1500);
              } else if (data.status === 'Refused' || data.status === 'Cancelled') {
                setTimeout(() => {
                  window.location.href = '/result/failed?orderRef={{orderRef}}';
                }, 1500);
              }
            } else {
              statusResult.innerHTML = `
                <div class="status-update error">
                  <strong>Error:</strong> ${data.error || 'Failed to check status'}
                </div>
              `;
            }
          } catch (error) {
            statusResult.innerHTML = `
              <div class="status-update error">
                <strong>Error:</strong> ${error.message}
              </div>
            `;
          } finally {
            checkStatusBtn.disabled = false;
            checkStatusBtn.textContent = 'Check updated status';
          }
        });
      })();
    </script>
    {{/if}}
    {{/ifeq}}
    
    {{#ifeq type "failed" }}
    <div class="status-icon failed">
      <img src="/images/failed.svg" class="status-image" alt="Failed">
    </div>
    <h1 class="status-title">Payment Failed</h1>
    <p class="status-message">
      The payment was refused. Please try a different payment method or card.
    </p>
    {{/ifeq}}

    {{#ifeq type "error" }}
    <div class="status-icon error">
      <img src="/images/error.svg" class="status-image" alt="Error">
    </div>
    <h1 class="status-title">Payment Error</h1>
    <p class="status-message">
      An error occurred during payment processing. Please review response in console and refer to <a href="https://docs.adyen.com/development-resources/response-handling" target="_blank">Response handling.</a>
    </p>
      {{/ifeq}}

    <div class="status-actions">
      <a class="button primary" href="/">Return to demo types</a>
      {{#ifeq type "pending" }}
      <a class="button secondary" href="/checkout/dropin">Try again</a>
      {{/ifeq}}
      {{#ifeq type "failed" }}
      <a class="button secondary" href="/checkout/dropin">Try different payment</a>
      {{/ifeq}}
    </div>
  </div>
</div>

